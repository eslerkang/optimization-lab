Predicted_Demand = [
    6.93,
    6.92,
    6.92,
    6.93,
    6.95,
    6.98,
    7.02,
    7.07,
    7.13,
    7.19,
    7.27,
    7.35,
    7.45,
    7.55,
    7.66,
    7.78,
    7.91,
    8.04,
    8.19,
    8.35,
    8.51,
    8.68,
    8.86,
    9.05,
    9.25,
    9.46,
    9.67,
    9.90,
    10.13,
    10.37,
    10.62,
    10.87,
    11.14,
    11.41,
    11.69,
    11.98,
    12.27,
    12.57,
    12.88,
    13.20,
    13.52,
    13.86,
    14.19,
    14.54,
    14.89,
    15.25,
    15.62,
    15.99,
    16.37,
    16.75,
    17.15,
    17.54,
    17.95,
    18.36,
    18.77,
    19.19,
    19.62,
    20.05,
    20.48,
    20.93,
    21.37,
    21.82,
    22.28,
    22.74,
    23.21,
    23.67,
    24.15,
    24.63,
    25.11,
    25.59,
    26.08,
    26.57,
    27.07,
    27.56,
    28.07,
    28.57,
    29.08,
    29.59,
    30.10,
    30.61,
    31.13,
    31.64,
    32.16,
    32.68,
    33.21,
    33.73,
    34.26,
    34.78,
    35.31,
    35.83,
    36.36,
    36.89,
    37.42,
    37.95,
    38.47,
    39.00,
    39.53,
    40.06,
    40.58,
    41.11,
    41.63,
    42.15,
    42.68,
    43.20,
    43.71,
    44.23,
    44.74,
    45.26,
    45.77,
    46.27,
    46.78,
    47.28,
    47.78,
    48.27,
    48.77,
    49.26,
    49.74,
    50.22,
    50.70,
    51.18,
    51.65,
    52.11,
    52.57,
    53.03,
    53.48,
    53.93,
    54.37,
    54.81,
    55.24,
    55.67,
    56.09,
    56.51,
    56.92,
    57.33,
    57.72,
    58.12,
    58.50,
    58.88,
    59.26,
    59.63,
    59.99,
    60.34,
    60.69,
    61.03,
    61.36,
    61.69,
    62.01,
    62.32,
    62.62,
    62.92,
    63.21,
    63.49,
    63.76,
    64.03,
    64.29,
    64.54,
    64.78,
    65.01,
    65.24,
    65.46,
    65.67,
    65.87,
    66.06,
    66.24,
    66.42,
    66.58,
    66.74,
    66.89,
    67.03,
    67.16,
    67.28,
    67.39,
    67.50,
    67.59,
    67.68,
    67.76,
    67.82,
    67.88,
    67.93,
    67.97,
    68.01,
    68.03,
    68.04,
    68.05,
    68.04,
    68.03,
    68.00,
    67.97,
    67.93,
    67.88,
    67.82,
    67.75,
    67.67,
    67.59,
    67.49,
    67.39,
    67.27,
    67.15,
    67.02,
    66.88,
    66.73,
    66.57,
    66.40,
    66.23,
    66.04,
    65.85,
    65.65,
    65.44,
    65.22,
    64.99,
    64.76,
    64.51,
    64.26,
    64.00,
    63.74,
    63.46,
    63.18,
    62.89,
    62.59,
    62.28,
    61.97,
    61.65,
    61.32,
    60.98,
    60.64,
    60.29,
    59.93,
    59.57,
    59.20,
    58.82,
    58.44,
    58.05,
    57.66,
    57.25,
    56.85,
    56.43,
    56.01,
    55.59,
    55.16,
    54.72,
    54.28,
    53.83,
    53.38,
    52.92,
    52.46,
    52.00,
    51.53,
    51.05,
    50.57,
    50.09,
    49.60,
    49.11,
    48.62,
    48.12,
    47.62,
    47.12,
    46.61,
    46.10,
    45.59,
    45.07,
    44.55,
    44.03,
    43.51,
    42.99,
    42.46,
    41.93,
    41.40,
    40.87,
    40.34,
    39.81,
    39.28,
    38.74,
    38.21,
    37.67,
    37.14,
    36.60,
    36.06,
    35.53,
    34.99,
    34.46,
    33.93,
    33.39,
    32.86,
    32.33,
    31.80,
    31.27,
    30.75,
    30.22,
    29.70,
    29.18,
    28.66,
    28.14,
    27.63,
    27.12,
    26.61,
    26.11,
    25.61,
    25.11,
    24.61,
    24.12,
    23.63,
    23.15,
    22.67,
    22.19,
    21.72,
    21.26,
    20.79,
    20.34,
    19.88,
    19.44,
    18.99,
    18.56,
    18.12,
    17.70,
    17.28,
    16.86,
    16.45,
    16.05,
    15.65,
    15.26,
    14.87,
    14.50,
    14.12,
    13.76,
    13.40,
    13.05,
    12.71,
    12.37,
    12.04,
    11.72,
    11.40,
    11.09,
    10.79,
    10.50,
    10.21,
    9.94,
    9.67,
    9.41,
    9.15,
    8.91,
    8.67,
    8.44,
    8.22,
    8.01,
    7.80,
    7.61,
    7.42,
    7.25,
    7.08,
    6.92,
    6.76,
    6.62,
    6.49,
    6.36,
    6.25,
    6.14,
    6.04,
    5.95,
    5.87,
    5.80,
    5.74,
    5.69,
    5.64,
    5.61,
    5.58,
    5.57,
    5.56,
    5.56,
    5.57,
    5.59,
    5.62,
    5.66,
    5.71,
    5.76,
    5.83,
    5.90,
    5.99,
    6.08,
    6.18,
    6.29,
    6.41,
    6.54,
    6.68,
    6.83,
    6.98,
    7.15,
    7.32,
    7.50,
    7.69,
    7.89,
    8.10,
    8.31,
    8.53,
    8.77,
    9.01,
    9.25,
    9.51,
    9.77,
    10.04,
    10.32,
    10.61,
    10.91,
    11.21,
    11.52,
    11.84,
    12.16,
    12.49,
    12.83,
    13.18,
    13.53,
    13.89,
    14.25,
    14.63,
    15.01,
    15.39,
    15.78,
    16.18,
    16.58,
    16.99,
    17.41,
    17.83,
    18.25,
    18.68,
    19.12,
    19.56,
    20.01,
    20.46,
    20.92,
    21.38,
    21.84,
    22.31,
    22.78,
    23.26,
    23.74,
    24.23,
    24.72,
    25.21,
    25.70,
    26.20,
    26.70,
    27.21,
    27.71,
    28.22,
    28.73,
    29.25,
    29.76,
    30.28,
    30.80,
    31.32,
    31.84,
    32.37,
    32.89,
    33.42,
    33.94,
    34.47,
    35.00,
    35.53,
    36.06,
    36.58,
    37.11,
    37.64,
    38.17,
    38.69,
    39.22,
    39.74,
    40.27,
    40.79,
    41.31,
    41.83,
    42.35,
    42.87,
    43.38,
    43.89,
    44.40,
    44.91,
    45.41,
    45.92,
    46.41,
    46.91,
    47.40,
    47.89,
    48.38,
    48.86,
    49.34,
    49.81,
    50.28,
    50.75,
    51.21,
    51.67,
    52.12,
    52.57,
    53.01,
    53.45,
    53.88,
    54.31,
    54.73,
    55.15,
    55.56,
    55.96,
    56.36,
    56.75,
    57.14,
    57.52,
    57.90,
    58.26,
    58.62,
    58.98,
    59.33,
    59.67,
    60.00,
    60.33,
    60.64,
    60.96,
    61.26,
    61.56,
    61.85,
    62.13,
    62.40,
    62.67,
    62.93,
    63.17,
    63.42,
    63.65,
    63.88,
    64.09,
    64.30,
    64.50,
    64.69,
    64.88,
    65.05,
    65.22,
    65.38,
    65.52,
    65.66,
    65.79,
    65.92,
    66.03,
    66.13,
    66.23,
    66.32,
    66.39,
    66.46,
    66.52,
    66.57,
    66.61,
    66.64,
    66.67,
    66.68,
    66.68,
    66.68,
    66.66,
    66.64,
    66.61,
    66.57,
    66.52,
    66.46,
    66.39,
    66.31,
    66.22,
    66.13,
    66.02,
    65.91,
    65.79,
    65.65,
    65.51,
    65.36,
    65.20,
    65.04,
    64.86,
    64.68,
    64.48,
    64.28,
    64.07,
    63.85,
    63.63,
    63.39,
    63.15,
    62.90,
    62.64,
    62.37,
    62.10,
    61.81,
    61.52,
    61.22,
    60.92,
    60.60,
    60.28,
    59.95,
    59.62,
    59.28,
    58.93,
    58.57,
    58.21,
    57.84,
    57.46,
    57.08,
    56.69,
    56.29,
    55.89,
    55.48,
    55.07,
    54.65,
    54.22,
    53.79,
    53.36,
    52.92,
    52.47,
    52.02,
    51.56,
    51.10,
    50.63,
    50.16,
    49.69,
    49.21,
    48.73,
    48.24,
    47.75,
    47.26,
    46.76,
    46.26,
    45.75,
    45.25,
    44.74,
    44.22,
    43.71,
    43.19,
    42.67,
    42.15,
    41.62,
    41.10,
    40.57,
    40.04,
    39.51,
    38.98,
    38.45,
    37.91,
    37.38,
    36.84,
    36.31,
    35.77,
    35.24,
    34.70,
    34.17,
    33.63,
    33.10,
    32.56,
    32.03,
    31.50,
    30.97,
    30.44,
    29.91,
    29.38,
    28.86,
    28.34,
    27.81,
    27.30,
    26.78,
    26.27,
    25.76,
    25.25,
    24.74,
    24.24,
    23.74,
    23.25,
    22.76,
    22.27,
    21.79,
    21.31,
    20.83,
    20.36,
    19.89,
    19.43,
    18.97,
    18.52,
    18.07,
    17.63,
    17.19,
    16.76,
    16.33,
    15.91,
    15.50,
    15.09,
    14.68,
    14.29,
    13.90,
    13.51,
    13.13,
    12.76,
    12.40,
    12.04,
    11.69,
    11.34,
    11.00,
    10.67,
    10.35,
    10.04,
    9.73,
    9.43,
    9.14,
    8.85,
    8.57,
    8.30,
    8.04,
    7.79,
    7.54,
    7.31,
    7.08,
    6.86,
    6.65,
    6.44,
    6.25,
    6.06,
    5.88,
    5.71,
    5.55,
    5.40,
    5.26,
    5.12,
    5.00,
    4.88,
    4.78,
    4.68,
    4.59,
    4.51,
    4.44,
    4.37,
    4.32,
    4.28,
    4.24,
    4.22,
]
fixed_production_cost = 1500
variable_production_cost = 1000
interest_rate_per_day = 0.1 / 365
shipping_cost_by_mail_per_unit = 150
shipping_cost_by_truck_with_capa_200 = 15000
holding_cost_per_unit_per_year = 100
customer_fullfilment_cost_per_unit = 150
production_capa_per_day = 20
lead_time_by_mail = 1
lead_time_by_truck = 7
price_for_capacity_enlargement_per_unit = 50000

import math
import numpy as np
from scipy import stats


def calculate_dynamic_eoq_rop(
    demand, holding_cost, ordering_cost, lead_time, service_level, window_size=30
):
    """
    Calculate dynamic EOQ and ROP for (Q, r) model with changing demand.

    :param demand: List of daily demand values
    :param holding_cost: Annual holding cost per unit
    :param ordering_cost: Fixed cost per order
    :param lead_time: Lead time in days
    :param service_level: Desired service level (e.g., 0.95 for 95%)
    :param window_size: Number of days to consider for moving average and standard deviation
    :return: Lists of (EOQ, ROP) for each day
    """
    eoq_list = []
    rop_list = []

    for i in range(len(demand)):
        # Use a moving window to calculate average and standard deviation
        window_start = max(0, i - window_size + 1)
        window_demand = demand[window_start : i + 1]

        # Calculate average daily demand for the window
        avg_daily_demand = np.mean(window_demand)

        # Calculate EOQ
        eoq = math.sqrt((2 * ordering_cost * avg_daily_demand * 365) / holding_cost)

        # Calculate standard deviation of daily demand for the window
        daily_demand_std = np.std(window_demand)

        # Calculate safety factor (z-score) based on service level
        z_score = stats.norm.ppf(service_level)

        # Calculate safety stock
        safety_stock = z_score * daily_demand_std * math.sqrt(lead_time)

        # Calculate ROP
        rop = (avg_daily_demand * lead_time) + safety_stock

        eoq_list.append(eoq)
        rop_list.append(rop)

    return eoq_list, rop_list


# Example usage
holding_cost = holding_cost_per_unit_per_year
ordering_cost = fixed_production_cost
lead_time = lead_time_by_truck  # Using truck lead time as an example
service_level = 0.95  # 95% service level

eoq_list, rop_list = calculate_dynamic_eoq_rop(
    Predicted_Demand, holding_cost, ordering_cost, lead_time, service_level
)

# Print the first few and last few results
print("First 5 days:")
for i in range(5):
    print(f"Day {i+1}: EOQ = {eoq_list[i]:.2f}, ROP = {rop_list[i]:.2f}")

print("\nLast 5 days:")
for i in range(-5, 0):
    print(
        f"Day {len(Predicted_Demand)+i+1}: EOQ = {eoq_list[i]:.2f}, ROP = {rop_list[i]:.2f}"
    )
